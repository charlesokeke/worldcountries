{"version":3,"sources":["containers/Countries/CountryContainer.module.css","components/CountryDetails/CountryDetails.module.css","components/Navigation/Navigation.module.css","components/Footer/Footer.module.css","components/CountryDetails/CountryDetails.js","components/MapContainer/MapContainer.js","components/MoreCountryDetails/MoreCountryDetails.js","containers/Countries/CountryContainer.js","components/Navigation/Navigation.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","countryDetails","props","className","styles","CardContainer","onClick","showCountryDetails","country","style","borderRight","src","flag","alt","name","length","slice","population","region","subregion","capital","array","languages","forEach","element","replace","getLanguages","currencies","mapStyles","width","height","MapContainer","state","data","nextPageToken","cityDetail","getMoreCities","Axios","post","then","response","cities","results","map","index","position","geometry","location","title","formatted_address","key","onMarkerClick","place_id","setState","next_page_token","catch","error","console","log","stop","setInterval","clearInterval","this","countryname","google","zoom","initialCenter","lat","lng","Component","GoogleApiWrapper","apiKey","MoreCountryDetails","cityDetailsPhotos","cityName","cityDetails","result","cityPhotos","photos","photo_reference","display","maxWidth","maxHeight","parseData","toString","test","parseObject","obj","objectEntries","Object","values","entries","boxShadow","paddingTop","CountryDetails","boxSizing","flexDirection","backgroundColor","marginBottom","overflow","padding","callingCodes","latlng","timezones","regionalBlocs","join","translations","borders","altSpellings","topLevelDomain","area","minHeight","PureComponent","CountryContainer","countries","value","countryResult","numberOfCountries","countryRegion","inputHandler","event","countrySearchResult","filter","toLowerCase","includes","target","getCountryDetails","clearInput","continentCountriesHandler","regions","countryName","showCountriesInContinent","get","window","scrollTo","color","fontWeight","top","right","border","justifyContent","alignItems","paddingBottom","CountryRegions","inputcontainer","field","placeholder","required","onChange","onBlur","flexWrap","Navigation","navbar","href","footer","App","Footer","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d68d6e5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"CountryContainer_field__2w458\",\"CountryRegions\":\"CountryContainer_CountryRegions__1LTkF\",\"field__input\":\"CountryContainer_field__input__2HNgI\",\"a-field\":\"CountryContainer_a-field__3rPaK\",\"a-field__input\":\"CountryContainer_a-field__input__g-4Vw\",\"a-field__label-wrap\":\"CountryContainer_a-field__label-wrap__1FHWD\",\"a-field__label\":\"CountryContainer_a-field__label__1GMHy\",\"a-field_a1\":\"CountryContainer_a-field_a1__A99le\",\"a-field_a2\":\"CountryContainer_a-field_a2__369P9\",\"a-field_a3\":\"CountryContainer_a-field_a3__36G7c\",\"inputcontainer\":\"CountryContainer_inputcontainer__21jeY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardContainer\":\"CountryDetails_CardContainer__1U56-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navigation_navbar__5T4dT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__hRRDu\"};","import React from \"react\"\r\nimport styles from \"./CountryDetails.module.css\"\r\n\r\n\r\nconst countryDetails = (props) => {\r\n    \r\n    function shortenName (name){\r\n       if(name.length > 25){\r\n           return name.slice(0, 20) + \"...\"\r\n       }else{\r\n           return name\r\n       }\r\n\r\n    }\r\n    function getLanguages(array){\r\n        let languages = \"\";\r\n        array.forEach(element => {\r\n            languages += element.name + \",\"\r\n        })\r\n        return languages.replace(/,\\s*$/, \"\");\r\n    }\r\n\r\n    function getCurrency(array){\r\n        let languages = \"\";\r\n        array.forEach(element => {\r\n            languages += `Name:${element.name}, Code:${element.code}, Symbol:${element.symbol}  `\r\n        })\r\n        return languages.replace(/,\\s*$/, \"\");\r\n    }\r\n\r\n    return (\r\n            <div className={`${styles.CardContainer} card mb-3`} onClick={() => props.showCountryDetails(props.country)} >\r\n              <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\" style={{borderRight:\"1px solid #ccc\"}}>\r\n                  <img src={props.country.flag} className=\"card-img\" alt=\"country-flag\"/>\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{shortenName(props.country.name)}</h5>\r\n                    <p>\r\n                        <small><strong>Population</strong>: {props.country.population}</small><br/>\r\n                        <small><strong>Region</strong>: {props.country.region}</small><br/>\r\n                        <small><strong>Sub-region</strong>: {props.country.subregion}</small><br/>\r\n                        <small><strong>Capital</strong>: {props.country.capital}</small><br/>\r\n                        <small><strong>Langugages</strong>: {getLanguages(props.country.languages)}</small><br/>\r\n                        <small><strong>Currency</strong>: {props.country.currencies[0].name}</small>\r\n\r\n\r\n                  </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>  \r\n    )\r\n}\r\n\r\nexport default countryDetails;","import React,{Component} from \"react\"\r\nimport { Map, GoogleApiWrapper, Marker  } from 'google-maps-react';\r\nimport Axios from \"axios\"\r\n\r\nconst mapStyles = {\r\n    width: '100%',\r\n    height: '100%',\r\n    \r\n  };\r\nclass MapContainer extends Component {\r\n  state ={\r\n    data:[],\r\n    nextPageToken:null,\r\n    cityDetail:[]\r\n    \r\n  }\r\n  //https://still-coast-42220.herokuapp.com/cities\r\n  componentDidMount() {\r\n    var stop = setInterval(() =>{\r\n      if(this.state.nextPageToken){\r\n        console.log('hello')\r\n        this.getMoreCities()\r\n      }else{\r\n        clearInterval(stop)\r\n      }\r\n    \r\n    },5000)\r\n    Axios.post(\"https://still-coast-42220.herokuapp.com/cities\",{cities:\"cities in \" + this.props.countryname})\r\n    .then(response => {\r\n      console.log(response.data.results)\r\n      const cities = response.data.results.map((element,index) =>{\r\n        return <Marker position={element.geometry.location}\r\n                    title={element.formatted_address}\r\n                    key={element.formatted_address} \r\n                    onClick={() => this.props.onMarkerClick(element.place_id)}\r\n                />\r\n      })\r\n      this.setState({data:cities,nextPageToken:response.data.next_page_token})\r\n    })\r\n    .catch((error) => {\r\n        console.log(error)\r\n    })\r\n\r\n  }\r\n\r\n  getMoreCities = () =>{\r\n    if(this.state.nextPageToken){\r\n      Axios.post(\"https://still-coast-42220.herokuapp.com/token\",{nextPageToken:this.state.nextPageToken})\r\n      .then(response =>{\r\n        const cities = response.data.results.map((element,index) =>{\r\n          return <Marker \r\n                    position={element.geometry.location}\r\n                    title={element.formatted_address} key={element.formatted_address} \r\n                    onClick={() => this.props.onMarkerClick(element.place_id)} \r\n                  />\r\n        })\r\n        this.setState((state,props) => {\r\n          return {data:[...state.data, ...cities],nextPageToken:response.data.next_page_token}\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  \r\n    render(){\r\n        return (\r\n          \r\n              <Map\r\n                google={this.props.google}\r\n                zoom={5}\r\n                style={mapStyles}\r\n                initialCenter={{ lat: this.props.lat, lng: this.props.lng}}\r\n              >\r\n                  {this.state.data}\r\n              </Map>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyDBUOAf-TRFXcQkDLaGk4kiQZ7ZJSyJzJc'\r\n  })(MapContainer);","import React,{PureComponent} from \"react\"\r\nimport CountryDetails from \"../CountryDetails/CountryDetails\"\r\nimport MapContainer from \"../MapContainer/MapContainer\"\r\nimport Axios from \"axios\"\r\n\r\n\r\n\r\nclass  MoreCountryDetails extends PureComponent {\r\n    state ={\r\n        cityDetailsPhotos:[],\r\n        cityName:null\r\n    }\r\n\r\n    onMarkerClick = (cityDetails) =>{\r\n        Axios.post(\"https://still-coast-42220.herokuapp.com/city_details\",{cityDetails:cityDetails})\r\n        .then(response => {\r\n          console.log(response.data.result)\r\n          console.log(response.data.result.name)\r\n          const cityPhotos = response.data.result.photos.map((element) => {\r\n              return  <img \r\n                        key={element.photo_reference} \r\n                        src={ `https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=${element.photo_reference}&key=AIzaSyDBUOAf-TRFXcQkDLaGk4kiQZ7ZJSyJzJc`} \r\n                        className=\"card-img-top\" \r\n                        alt=\"pic\"\r\n                        style={{display:\"block\",maxWidth:\"230px\", maxHeight:\"95px\",width:\"auto\",height:\"auto\"}}\r\n                        width=\"300px\"\r\n                        height=\"200px\" \r\n                       />\r\n          })\r\n            this.setState({cityDetailsPhotos:cityPhotos,cityName:response.data.result.name})\r\n          \r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n    \r\n      }\r\n\r\n     parseData = (array) => {\r\n        let languages = \"\";\r\n        if(array.length){ \r\n        array.forEach(element => {\r\n            languages += element.toString() + \",\"\r\n        })\r\n        return languages.replace(/,\\s*$/, \"\");\r\n        }else{\r\n            return \"None available\"\r\n        }\r\n    }\r\n\r\n    test =  () => {\r\n\r\n    }\r\n\r\n    parseObject=  (obj) => {\r\n        let objectEntries = ''\r\n       if(Object.values(obj).length){\r\n            Object.entries(obj).forEach(element => {\r\n                objectEntries += element[0] + \": \" + + \"\" + element[1] + \", \"\r\n        })\r\n        return objectEntries.replace(/,\\s*$/, \"\");\r\n       }else{\r\n           return \"None available\"\r\n       }\r\n       \r\n    }\r\n    render () {\r\n        console.log(this.state.cityDetailsPhotos)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 \" style={{boxShadow:\" 0px 2px 3px #ccc\",paddingTop:\"5px\"}}>\r\n                        <CountryDetails country={this.props.data } showCountryDetails={this.test}/>\r\n                            <div style={{display:\"flex\",boxShadow:\" 0px 2px 3px #ccc\", position:\"relative\",boxSizing:\"border-box\", height:\"100px\",flexDirection:\"row\",backgroundColor:\"#ccc\",marginBottom:\"3px\", overflow:\"auto\",}}>\r\n                                   {this.state.cityDetailsPhotos.length ? this.state.cityDetailsPhotos : <h6 className=\"text-muted pl-1\">Click markers for city photos</h6>} \r\n                            </div>\r\n                            <p className=\"text-center\"> <strong>{this.state.cityName ? `The city of ${this.state.cityName}` : null}</strong></p>\r\n                        \r\n                    </div>\r\n                    <div className=\"col-md-6\" style={{boxShadow:\" 0px 2px 3px #ccc\",paddingTop:'10px'}}>\r\n                        <p style={{boxShadow:\"0px 2px 3px\",padding:\"20px\"}}>\r\n                            <small><strong>Calling Codes: </strong>{this.parseData(this.props.data.callingCodes)}</small><br />\r\n                            <small><strong>Latlng: </strong>{this.parseData(this.props.data.latlng)}</small><br />\r\n                            <small><strong>Timezone: </strong>{this.parseData(this.props.data.timezones)}</small><br />\r\n                            <small><strong>Regionalblocs: </strong>{this.props.data.regionalBlocs.length ? \r\n                            Object.values(this.props.data.regionalBlocs[0]).join(\", \").replace(/,\\s*$/, \"\") : \"None available\"}</small><br />\r\n                            <small><strong>Translations: </strong>{this.parseObject(this.props.data.translations)}</small><br />\r\n                            <small><strong>Borders: </strong>{this.parseData(this.props.data.borders)}</small><br />\r\n                            <small><strong>AltSpelling: </strong>{this.parseData(this.props.data.altSpellings)}</small><br />\r\n                            <small><strong>Translations: </strong>{this.parseData(this.props.data.altSpellings)}</small><br />\r\n                            <small><strong>TopLevelDomain: </strong>{this.parseData(this.props.data.topLevelDomain)}</small><br />\r\n                            <small><strong>Area: </strong>{`${this.props.data.area}km`}</small>\r\n    \r\n    \r\n    \r\n                        </p>\r\n                       \r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 pt-2\" style={{minHeight:\"500px\"}}>\r\n                        <MapContainer \r\n                         lat={ this.props.data.latlng.length ?this. props.data.latlng[0] : 0}\r\n                         lng={this.props.data.latlng.length ? this.props.data.latlng[1]: 0}\r\n                         countryname={this.props.data.name}\r\n                         onMarkerClick={this.onMarkerClick}\r\n                         />\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        )\r\n    }\r\n   \r\n}\r\nexport default MoreCountryDetails","import React,{PureComponent} from \"react\"\r\nimport Axios from \"axios\"\r\nimport CountryDetails from \"../../components/CountryDetails/CountryDetails\"\r\nimport MoreCountryDetail from \"../../components/MoreCountryDetails/MoreCountryDetails\"\r\nimport styles from \"./CountryContainer.module.css\"\r\n\r\n\r\n\r\nclass CountryContainer extends PureComponent {\r\n    state = {\r\n        countries:[],\r\n        value:'',\r\n        countryResult:[],\r\n        countryDetails: null,\r\n        numberOfCountries:null,\r\n        countryRegion: null\r\n    } \r\n    componentDidMount (){\r\n        Axios.get(\"https://restcountries.eu/rest/v2/all\").then(response => {\r\n            this.setState({countries:response.data})\r\n        })\r\n    }\r\n    componentDidUpdate() {\r\n        window.scrollTo(0, 0)\r\n      }\r\n\r\n    inputHandler = (event) => {\r\n            const countrySearchResult = this.state.countries.filter(country => {\r\n                return country.name.toLowerCase().includes(event.target.value.toLowerCase())\r\n        })\r\n        .map((element,index) => {\r\n            return <CountryDetails key={index} country={element} showCountryDetails= {this.getCountryDetails}/>\r\n        })\r\n        this.setState({\r\n            countryResult:countrySearchResult,\r\n             countryDetails:null,\r\n             value:event.target.value,\r\n             numberOfCountries:null\r\n            })\r\n    }\r\n\r\n   \r\n\r\n    clearInput = () => {\r\n        this.setState({value: ''})\r\n    }\r\n    getCountryDetails = (data) => {\r\n        this.setState({\r\n            countryDetails:data,numberOfCountries:null\r\n        })\r\n        console.log(data)\r\n    }\r\n    \r\n    continentCountriesHandler = (regions) => {\r\n        let countryName = null\r\n        const showCountriesInContinent = this.state.countries.filter((country) =>{\r\n            return regions.includes(country.region.toLowerCase())  || regions.includes(country.subregion.toLowerCase())\r\n            \r\n        })\r\n        .map((element,index) => {\r\n            countryName = element.region\r\n             return <CountryDetails \r\n                        key={index} \r\n                        country={element} \r\n                        showCountryDetails={this.getCountryDetails}\r\n                    />\r\n        })\r\n        this.setState({\r\n            countryResult:showCountriesInContinent,\r\n             countryDetails:null,\r\n              numberOfCountries:showCountriesInContinent.length,\r\n               countryRegion:countryName\r\n            })\r\n            \r\n    }\r\n\r\n   \r\n    render () {\r\n        console.log(this.state.numberOfCountries)\r\n        \r\n        return (\r\n            <div style={{paddingTop:\"100px\", position:\"relative\",boxSizing:\"border-box\"}}>\r\n                {this.state.numberOfCountries ? \r\n                <span style={{position:\"absolute\", color:\"purple\",padding:\"8px\",fontWeight:\"500\",top:\"10px\", right:\"20px\",border:\"2px solid #ccc\"}}>Total Countries in {this.state.countryRegion}: {this.state.numberOfCountries}</span>:\r\n                 null\r\n                 }\r\n                <main style={{display:\"flex\",justifyContent:'center', alignItems:\"center\", flexDirection:\"column\"}}>\r\n                    <div style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\", paddingBottom:\"10px\",position:\"relative\"}} >\r\n                        \r\n                      <ul className={`list-group list-group-horizontal-lg ${styles.CountryRegions}`} >\r\n                        <li className=\"list-group-item \" onClick={() => this.continentCountriesHandler( [\"asia\",\"western asia\",\"south-eastern asia\",\"northern asia\", \"southern asia\",\"central asia\",\"eastern asia\"])}>Asia</li>\r\n                        <li className=\"list-group-item\" onClick={() => this.continentCountriesHandler( [\"europe\",\"western europe\",\"northern europe\", \"southern europe\",\"central europe\",\"eastern europe\",\"western europe\"])}>Europe</li>\r\n                        <li className=\"list-group-item\" onClick={() => this.continentCountriesHandler( [\"americas\",\"western america\",\"northern america\", \"south america\",\"central america\"])}>Americas</li>\r\n                        <li className=\"list-group-item\" onClick={() => this.continentCountriesHandler( [\"africa\",\"western africa\",\"northern africa\", \"southern africa\",\"eastern africa\"])}>Africa</li>\r\n\r\n                      </ul>\r\n                      \r\n                  </div>\r\n                <div className={styles.inputcontainer}>\r\n                    <label className={[styles.field, styles[\"a-field\"], styles[\"a-field_a1\"]].join(\" \")}>\r\n                        <input \r\n                            className={[styles[\"field__input\"], styles[\"a-field__input\"]].join(\" \")} \r\n                            placeholder=\"e.g. Japan\" required \r\n                            value={this.state.value} \r\n                            onChange={this.inputHandler}\r\n                            onBlur={this.clearInput}\r\n                        />\r\n                        <span className={styles['a-field__label-wrap']}>\r\n                        <span className={`${styles[\"a-field__label\"]} text-muted`}>Search for countries </span>\r\n                        </span>\r\n                    </label>   \r\n                </div>\r\n                \r\n                </main>\r\n                <div style={{display:\"flex\", boxSizing:\"border-box\",justifyContent:\"center\", alignItems:\"center\", flexDirection:\"row\",flexWrap:\"wrap\", padding:\" 10px 10px 6rem 10px\"}}>\r\n                    {!this.state.countryDetails ? this.state.countryResult: <MoreCountryDetail data={this.state.countryDetails}/>}\r\n                </div>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n export default CountryContainer","import React from \"react\"\r\nimport styles from \"./Navigation.module.css\"\r\n\r\nconst Navigation = (props) => {\r\n\r\n    return (\r\n        <div className={styles.navbar}>\r\n            <a href=\"#home\">World Countries</a>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation","import React from \"react\"\r\nimport styles from \"./Footer.module.css\"\r\n\r\nconst footer= (props) => {\r\n\r\n    return (\r\n        <div className={styles.footer}>\r\n            <p className=\"text-muted\"> &copy;Copyright Chukwuemeka Okeke 2019</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default footer","import React,{Fragment} from 'react';\nimport './App.css';\nimport CountryContainer from \"./containers/Countries/CountryContainer\"\nimport Navigation from \"./components/Navigation/Navigation\"\nimport Footer from \"./components/Footer/Footer\"\n\n\n\nfunction App() {\n  return (\n    <Fragment>\n    <Navigation />\n    <div className=\"ContentWrapper\">\n      <CountryContainer />\n    </div>\n    <Footer />\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}