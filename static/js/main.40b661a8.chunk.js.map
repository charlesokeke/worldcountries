{"version":3,"sources":["containers/Countries/CountryContainer.module.css","components/CountryDetails/CountryDetails.module.css","components/Navigation/Navigation.module.css","components/Footer/Footer.module.css","components/CountryDetails/CountryDetails.js","components/MapContainer/MapContainer.js","components/MoreCountryDetails/MoreCountryDetails.js","containers/Countries/CountryContainer.js","components/Navigation/Navigation.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","countryDetails","showCountryDetails","country","flag","name","population","region","subregion","capital","languages","currencies","className","styles","CardContainer","onClick","style","borderRight","src","alt","length","slice","shortenName","array","forEach","element","replace","getLanguages","shortenCurrencyName","code","symbol","getCurrency","mapStyles","width","height","MapContainer","state","data","nextPageToken","cityDetail","showspinner","getMoreCities","Axios","post","then","response","cities","results","map","index","position","geometry","location","title","formatted_address","key","props","onMarkerClick","place_id","setState","next_page_token","catch","error","console","log","stop","setInterval","clearInterval","this","countryname","google","zoom","initialCenter","lat","lng","display","alignItems","justifyContent","Spinner","animation","variant","Component","GoogleApiWrapper","apiKey","MoreCountryDetails","cityDetailsPhotos","cityName","cityDetails","cityPhotos","result","photos","photo_reference","maxWidth","maxHeight","parseData","toString","test","parseObject","obj","objectEntries","Object","values","entries","callingCodes","latlng","timezones","regionalBlocs","translations","borders","altSpellings","topLevelDomain","area","boxShadow","paddingTop","CountryDetails","boxSizing","flexDirection","backgroundColor","marginBottom","overflow","margin","padding","join","minHeight","PureComponent","CountryContainer","countries","value","countryResult","numberOfCountries","countryRegion","inputHandler","event","countrySearchResult","filter","toLowerCase","includes","target","getCountryDetails","clearInput","continentCountriesHandler","regions","countryName","showCountriesInContinent","get","window","scrollTo","color","fontWeight","top","right","paddingBottom","lineHeight","wordSpacing","letterSpacing","CountryRegions","inputcontainer","field","placeholder","required","onChange","onBlur","flexWrap","Navigation","navbar","href","reload","footer","App","Footer","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.40b661a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"CountryContainer_field__2w458\",\"CountryRegions\":\"CountryContainer_CountryRegions__1LTkF\",\"field__input\":\"CountryContainer_field__input__2HNgI\",\"a-field\":\"CountryContainer_a-field__3rPaK\",\"a-field__input\":\"CountryContainer_a-field__input__g-4Vw\",\"a-field__label-wrap\":\"CountryContainer_a-field__label-wrap__1FHWD\",\"a-field__label\":\"CountryContainer_a-field__label__1GMHy\",\"a-field_a1\":\"CountryContainer_a-field_a1__A99le\",\"a-field_a2\":\"CountryContainer_a-field_a2__369P9\",\"a-field_a3\":\"CountryContainer_a-field_a3__36G7c\",\"inputcontainer\":\"CountryContainer_inputcontainer__21jeY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardContainer\":\"CountryDetails_CardContainer__1U56-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navigation_navbar__5T4dT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__hRRDu\"};","import React from \"react\"\r\nimport styles from \"./CountryDetails.module.css\"\r\n\r\n\r\nconst countryDetails = ({showCountryDetails,country:{flag,name, population,region,subregion,capital,languages,currencies},country}) => {\r\n    \r\n    function shortenName (name){\r\n       if(name.length > 25){\r\n           return name.slice(0, 20) + \"...\"\r\n       }else{\r\n           return name\r\n       }\r\n\r\n    }\r\n    function shortenCurrencyName (name){\r\n      if(name.length > 40){\r\n          return name.slice(0, 40) + \"...\"\r\n      }else{\r\n          return name\r\n      }\r\n\r\n   }\r\n    function getLanguages(array){\r\n        let languages = \"\";\r\n        array.forEach(element => {\r\n            languages += element.name + \",\"\r\n        })\r\n        return languages.replace(/,\\s*$/, \"\");\r\n    }\r\n\r\n    function getCurrency(array){\r\n        let languages = \"\";\r\n        array.forEach(element => {\r\n            languages += `Name:${element.name || \"None\"}, Code:${element.code || \"None\"}, Symbol:${element.symbol || \"None\"}  `\r\n        })\r\n        return languages.replace(/,\\s*$/, \"\");\r\n    }\r\n\r\n    return (\r\n            <div className={`${styles.CardContainer} card mb-3`} onClick={() => showCountryDetails(country)} >\r\n              <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\" style={{borderRight:\"1px solid #ccc\"}}>\r\n                  <img src={flag} className=\"card-img\" alt=\"country-flag\"/>\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{shortenName(name)}</h5>\r\n                    <p>\r\n                        <small><strong>Population</strong>: {population}</small><br/>\r\n                        <small><strong>Region</strong>: {region}</small><br/>\r\n                        <small><strong>Sub-region</strong>: {subregion}</small><br/>\r\n                        <small><strong>Capital</strong>: {capital}</small><br/>\r\n                        <small><strong>Langugages</strong>: {getLanguages(languages)}</small><br/>\r\n                        <small><strong>Currency</strong>: {shortenCurrencyName(getCurrency(currencies))}</small>\r\n\r\n\r\n                  </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>  \r\n    )\r\n}\r\n\r\nexport default countryDetails;","import React,{Component} from \"react\"\r\nimport { Map, GoogleApiWrapper, Marker  } from 'google-maps-react';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport Axios from \"axios\"\r\n\r\nconst mapStyles = {\r\n    width: '100%',\r\n    height: '100%',\r\n    \r\n  };\r\nclass MapContainer extends Component {\r\n  state ={\r\n    data:[],\r\n    nextPageToken:null,\r\n    cityDetail:[],\r\n    showspinner:false\r\n    \r\n  }\r\n  //https://still-coast-42220.herokuapp.com/cities\r\n  componentDidMount() {\r\n    var stop = setInterval(() =>{\r\n      if(this.state.nextPageToken){\r\n        this.getMoreCities()\r\n      }else{\r\n        clearInterval(stop)\r\n      }\r\n    \r\n    },5000)\r\n    Axios.post(\"https://still-coast-42220.herokuapp.com/cities\",{cities:\"cities in \" + this.props.countryname})\r\n    .then(response => {\r\n      console.log(response.data.results)\r\n      const cities = response.data.results.map((element,index) =>{\r\n        return <Marker position={element.geometry.location}\r\n                    title={element.formatted_address}\r\n                    key={element.formatted_address} \r\n                    onClick={() => this.props.onMarkerClick(element.place_id)}\r\n                />\r\n      })\r\n      this.setState({data:cities,nextPageToken:response.data.next_page_token})\r\n    })\r\n    .catch((error) => {\r\n        console.log(error)\r\n    })\r\n\r\n  }\r\n\r\n  getMoreCities = () =>{\r\n    if(this.state.nextPageToken){\r\n      Axios.post(\"https://still-coast-42220.herokuapp.com/token\",{nextPageToken:this.state.nextPageToken})\r\n      .then(response =>{\r\n        const cities = response.data.results.map((element,index) =>{\r\n          return <Marker \r\n                    position={element.geometry.location}\r\n                    title={element.formatted_address} key={element.formatted_address} \r\n                    onClick={() => this.props.onMarkerClick(element.place_id)} \r\n                  />\r\n        })\r\n        this.setState((state,props) => {\r\n          return {data:[...state.data, ...cities],nextPageToken:response.data.next_page_token}\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  \r\n    render(){\r\n        return (\r\n          \r\n              <Map\r\n                google={this.props.google}\r\n                zoom={5}\r\n                style={mapStyles}\r\n                initialCenter={{ lat: this.props.lat, lng: this.props.lng}}\r\n              >\r\n                  {this.state.data.length ? this.state.data : <div style={{position:\"relative\", display:\"flex\", alignItems:\"center\", justifyContent:\"center\"}}><Spinner animation=\"border\" variant=\"info\"/></div>}\r\n              </Map>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyDBUOAf-TRFXcQkDLaGk4kiQZ7ZJSyJzJc'\r\n  })(MapContainer);","import React,{PureComponent} from \"react\"\r\nimport CountryDetails from \"../CountryDetails/CountryDetails\"\r\nimport MapContainer from \"../MapContainer/MapContainer\"\r\nimport Axios from \"axios\"\r\n\r\n\r\n\r\nclass  MoreCountryDetails extends PureComponent {\r\n    state ={\r\n        cityDetailsPhotos:[],\r\n        cityName:null\r\n    }\r\n\r\n    onMarkerClick = (cityDetails) =>{\r\n        Axios.post(\"https://still-coast-42220.herokuapp.com/city_details\",{cityDetails:cityDetails})\r\n        .then(response => {\r\n          //console.log(response.data.result)\r\n          //console.log(response.data.result.name)\r\n          const cityPhotos = response.data.result.photos.map((element) => {\r\n              return  <img \r\n                        key={element.photo_reference} \r\n                        src={ `https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=${element.photo_reference}&key=AIzaSyDBUOAf-TRFXcQkDLaGk4kiQZ7ZJSyJzJc`} \r\n                        className=\"card-img-top\" \r\n                        alt=\"pic\"\r\n                        style={{display:\"block\",maxWidth:\"230px\", maxHeight:\"95px\",width:\"auto\",height:\"auto\"}}\r\n                        width=\"300px\"\r\n                        height=\"200px\" \r\n                       />\r\n          })\r\n          \r\n            this.setState({cityDetailsPhotos:cityPhotos.length ?\r\n                 cityPhotos : \"No photos available\",\r\n                 cityName:response.data.result.formatted_address})\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n    \r\n      }\r\n\r\n     parseData = (array) => {\r\n        let languages = \"\";\r\n        if(array.length){ \r\n        array.forEach(element => {\r\n            languages += element.toString() + \",\"\r\n        })\r\n        return languages.replace(/,\\s*$/, \"\");\r\n        }else{\r\n            return \"None available\"\r\n        }\r\n    }\r\n\r\n    test =  () => {\r\n\r\n    }\r\n\r\n    parseObject=  (obj) => {\r\n        let objectEntries = ''\r\n       if(Object.values(obj).length){\r\n            Object.entries(obj).forEach(element => {\r\n                objectEntries += element[0] + \": \" + + \"\" + element[1] + \", \"\r\n        })\r\n        return objectEntries.replace(/,\\s*$/, \"\");\r\n       }else{\r\n           return \"None available\"\r\n       }\r\n       \r\n    }\r\n    render () {\r\n        console.log(this.state.cityDetailsPhotos)\r\n        const {data:{callingCodes,latlng,timezones,regionalBlocs, translations,borders,altSpellings,topLevelDomain,area, name}, data} = this.props\r\n        const {cityDetailsPhotos,cityName} = this.state\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 \" style={{boxShadow:\" 0px 2px 3px #ccc\",paddingTop:\"5px\"}}>\r\n                        <CountryDetails country={data} showCountryDetails={this.test}/>\r\n                            <div style={{display:\"flex\",boxShadow:\" 0px 2px 3px #ccc\", position:\"relative\",boxSizing:\"border-box\", height:\"100px\",flexDirection:\"row\",backgroundColor:\"#ccc\",marginBottom:\"3px\", overflow:\"auto\",}}>\r\n                                   {cityDetailsPhotos.length ? cityDetailsPhotos : \r\n                                   <h6 className=\"text-muted pt-3\" style={{margin:\"0 auto\",boxSizing:\"border-box\"}}>Click Map Markers</h6>\r\n                                } \r\n                            </div>\r\n                            <p className=\"text-center\"> <strong>{cityName ? `The city of ${cityName}` : null}</strong></p>\r\n                        \r\n                    </div>\r\n                    <div className=\"col-md-6\" style={{boxShadow:\" 0px 2px 3px #ccc\",paddingTop:'10px'}}>\r\n                        <p style={{boxShadow:\"0px 2px 3px\",padding:\"20px\"}}>\r\n                            <small><strong>Calling Codes: </strong>{this.parseData(callingCodes)}</small><br />\r\n                            <small><strong>Latlng: </strong>{this.parseData(latlng)}</small><br />\r\n                            <small><strong>Timezone: </strong>{this.parseData(timezones)}</small><br />\r\n                            <small><strong>Regionalblocs: </strong>{regionalBlocs.length ? Object.values(regionalBlocs[0]).join(\", \").replace(/,\\s*$/, \"\") : \"None available\"}</small><br />\r\n                            <small><strong>Translations: </strong>{this.parseObject(translations)}</small><br />\r\n                            <small><strong>Borders: </strong>{this.parseData(borders)}</small><br />\r\n                            <small><strong>AltSpelling: </strong>{this.parseData(altSpellings)}</small><br />\r\n                            <small><strong>Translations: </strong>{this.parseData(altSpellings)}</small><br />\r\n                            <small><strong>TopLevelDomain: </strong>{this.parseData(topLevelDomain)}</small><br />\r\n                            <small><strong>Area: </strong>{`${area}km`}</small>\r\n    \r\n    \r\n    \r\n                        </p>\r\n                       \r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 pt-2 pl-0\" style={{minHeight:\"500px\",boxShadow:\" 0px 2px 3px #ccc\"}}>\r\n                        <MapContainer \r\n                         lat={ latlng.length ? latlng[0] : 0}\r\n                         lng={latlng.length ? latlng[1]: 0}\r\n                         countryname={name}\r\n                         onMarkerClick={this.onMarkerClick}\r\n                         />\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        )\r\n    }\r\n   \r\n}\r\nexport default MoreCountryDetails","import React,{PureComponent} from \"react\"\r\nimport Axios from \"axios\"\r\nimport CountryDetails from \"../../components/CountryDetails/CountryDetails\"\r\nimport MoreCountryDetail from \"../../components/MoreCountryDetails/MoreCountryDetails\"\r\nimport styles from \"./CountryContainer.module.css\"\r\n\r\n\r\n\r\nclass CountryContainer extends PureComponent {\r\n    state = {\r\n        countries:[],\r\n        value:'',\r\n        countryResult:[],\r\n        countryDetails: null,\r\n        numberOfCountries:null,\r\n        countryRegion: null\r\n    } \r\n    componentDidMount (){\r\n        Axios.get(\"https://restcountries.eu/rest/v2/all\").then(response => {\r\n            this.setState({countries:response.data})\r\n        })\r\n    }\r\n    componentDidUpdate() {\r\n        window.scrollTo(0, 0)\r\n      }\r\n\r\n    inputHandler = (event) => {\r\n            const countrySearchResult = this.state.countries.filter(country => {\r\n                return country.name.toLowerCase().includes(event.target.value.toLowerCase())\r\n        })\r\n        .map((element,index) => {\r\n            return <CountryDetails key={index} country={element} showCountryDetails= {this.getCountryDetails}/>\r\n        })\r\n        this.setState({\r\n            countryResult:countrySearchResult,\r\n             countryDetails:null,\r\n             value:event.target.value,\r\n             numberOfCountries:null\r\n            })\r\n    }\r\n\r\n   \r\n\r\n    clearInput = () => {\r\n        this.setState({value: ''})\r\n    }\r\n    getCountryDetails = (data) => {\r\n        this.setState({\r\n            countryDetails:data,numberOfCountries:null\r\n        })\r\n        console.log(data)\r\n    }\r\n    \r\n    continentCountriesHandler = (regions) => {\r\n        let countryName = null\r\n        const showCountriesInContinent = this.state.countries.filter((country) =>{\r\n            return regions.includes(country.region.toLowerCase())  || regions.includes(country.subregion.toLowerCase())\r\n            \r\n        })\r\n        .map((element,index) => {\r\n            countryName = element.region\r\n             return <CountryDetails \r\n                        key={index} \r\n                        country={element} \r\n                        showCountryDetails={this.getCountryDetails}\r\n                    />\r\n        })\r\n        this.setState({\r\n            countryResult:showCountriesInContinent,\r\n             countryDetails:null,\r\n              numberOfCountries:showCountriesInContinent.length,\r\n               countryRegion:countryName\r\n            })\r\n            \r\n    }\r\n\r\n   \r\n    render () {\r\n        //console.log(this.state.numberOfCountries)\r\n        const {numberOfCountries, value, countryDetails, countryResult} = this.state\r\n        \r\n        return (\r\n            <div style={{paddingTop:\"100px\", position:\"relative\",boxSizing:\"border-box\"}}>\r\n                {numberOfCountries ? \r\n                <span style={{position:\"absolute\", color:\"#563d7c\",padding:\"8px\",fontWeight:\"600\",top:\"10px\", right:\"20px\",boxShadow:\"0px 2px 3px #ccc\"}}>Total Countries in {this.state.countryRegion}: {this.state.numberOfCountries}</span>:\r\n                 null\r\n                 }\r\n                <main style={{display:\"flex\",justifyContent:'center', alignItems:\"center\", flexDirection:\"column\"}}>\r\n                    <div style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\", paddingBottom:\"10px\",position:\"relative\",flexDirection:\"column\"}} >\r\n                        <h6 style={{lineHeight:\"1.6\",boxShadow:\"0px 2px 3px #ccc\",padding:\"2px 30px\",margin:\"0px\",fontWeight:\"600\",color:\"#495057\",wordSpacing:\"normal\",letterSpacing:\"normal\"}}>Countries by Continent</h6>\r\n                      <ul className={`list-group list-group-horizontal-lg ${styles.CountryRegions}`} >\r\n                        <li className=\"list-group-item \" onClick={() => this.continentCountriesHandler( [\"asia\",\"western asia\",\"south-eastern asia\",\"northern asia\", \"southern asia\",\"central asia\",\"eastern asia\"])}>Asia</li>\r\n                        <li className=\"list-group-item\" onClick={() => this.continentCountriesHandler( [\"europe\",\"western europe\",\"northern europe\", \"southern europe\",\"central europe\",\"eastern europe\",\"western europe\"])}>Europe</li>\r\n                        <li className=\"list-group-item\" onClick={() => this.continentCountriesHandler( [\"americas\",\"western america\",\"northern america\", \"south america\",\"central america\"])}>Americas</li>\r\n                        <li className=\"list-group-item\" onClick={() => this.continentCountriesHandler( [\"africa\",\"western africa\",\"northern africa\", \"southern africa\",\"eastern africa\"])}>Africa</li>\r\n\r\n                      </ul>\r\n                      \r\n                  </div>\r\n                <div className={styles.inputcontainer}>\r\n                    <label className={[styles.field, styles[\"a-field\"], styles[\"a-field_a1\"]].join(\" \")}>\r\n                        <input \r\n                            className={[styles[\"field__input\"], styles[\"a-field__input\"]].join(\" \")} \r\n                            placeholder=\"e.g. Japan\" required \r\n                            value={value} \r\n                            onChange={this.inputHandler}\r\n                            onBlur={this.clearInput}\r\n                        />\r\n                        <span className={styles['a-field__label-wrap']}>\r\n                        <span className={`${styles[\"a-field__label\"]} text-muted`}>Search for countries </span>\r\n                        </span>\r\n                    </label>   \r\n                </div>\r\n                \r\n                </main>\r\n                <div style={{display:\"flex\", boxSizing:\"border-box\",justifyContent:\"center\", alignItems:\"center\", flexDirection:\"row\",flexWrap:\"wrap\", padding:\" 10px 10px 6rem 10px\"}}>\r\n                    {!countryDetails ? countryResult: <MoreCountryDetail data={countryDetails}/>}\r\n                </div>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n export default CountryContainer","import React from \"react\"\r\nimport styles from \"./Navigation.module.css\"\r\n\r\nconst Navigation = (props) => {\r\n\r\n    function reload (){\r\n        window.location.reload(false)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.navbar}>\r\n            <a href=\"#\" onClick={reload}>World Countries</a>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation","import React from \"react\"\r\nimport styles from \"./Footer.module.css\"\r\n\r\nconst footer= (props) => {\r\n\r\n    return (\r\n        <div className={styles.footer}>\r\n            <p className=\"text-muted\"> &copy;Copyright Chukwuemeka Okeke 2019</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default footer","import React,{Fragment} from 'react';\nimport './App.css';\nimport CountryContainer from \"./containers/Countries/CountryContainer\"\nimport Navigation from \"./components/Navigation/Navigation\"\nimport Footer from \"./components/Footer/Footer\"\n\nfunction App() {\n  return (\n    <Fragment>\n    <Navigation />\n    <div className=\"ContentWrapper\">\n      <CountryContainer />\n    </div>\n    <Footer />\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}